import createClient from 'openapi-fetch';
import { authMiddleware } from './auth';
import { NerisApiConfig } from './config';
import type { paths } from './neris-api'; // generated by openapi-typescript

export const defaultConfig = (): NerisApiConfig => {
  switch (process.env.NERIS_GRANT_TYPE) {
    case 'password':
      return {
        baseUrl: process.env.NERIS_BASE_URL || 'https://api.neris.fsri.org/v1',
        auth: {
          _type: 'password',
          username: process.env.NERIS_USERNAME || '',
          password: process.env.NERIS_PASSWORD || '',
        },
      };
    case 'client_credentials':
      return {
        baseUrl: process.env.NERIS_BASE_URL || 'https://api.neris.fsri.org/v1',
        auth: {
          _type: 'client_credentials',
          client_id: process.env.NERIS_CLIENT_ID || '',
          client_secret: process.env.NERIS_CLIENT_SECRET || '',
        },
      };
    default:
      throw new Error("Bad grant_type. Options are 'client_credentials', or 'password'.");
  }
};

export const createNerisClient = (config: NerisApiConfig = defaultConfig()) => {
  const client = createClient<paths>({
    baseUrl: config.baseUrl,
    fetch: config.fetch,
  });
  client.use(authMiddleware(config));

  return client;
};
